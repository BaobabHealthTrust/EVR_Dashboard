
  <title>EVR Dashboard</title>
  <script src="data/coords.js"></script>
  <script src="data/districts.js"></script>
  <script src="data/sites.js"></script>
  <script src="data/zones.js"></script>
  <script src="data/district_offsets.js"></script>
  <style>
        body {
          font-family: "Lucida Grande", "Lucida Sans Unicode", Arial, Helvetica, sans-serif;
        }
        #legend, #legend2{
            width: 350px;
            margin-right: 2px;
            border-collapse: collapse;
        }
        #legend2{
            text-align: left;
        }
        #red, #green, #yellow{
            width: 35%;
            padding: 8px;
            border: 1px solid lightblue;
        }
        #stat-red, #stat-green, #stat-yellow{
            width: 70%;
            padding: 9px;
            border: 1px solid lightblue;
        }
        #red-txt, #green-txt, #yellow-txt{
            width: 65%;
            padding: 6px;
            border: 1px solid lightblue;
            text-align: right;
        }
        #stat-red-txt, #stat-green-txt, #stat-yellow-txt{
            width: 30%;
            padding: 6px;
            border: 1px solid lightblue;
            text-align: right;
            font-weight: bold;
        }
        #red, #stat-red{
            background: rgba(255,0,0,0.7);
        }
        #green, #stat-green{
            background: rgba(0,200,0,0.7);
        }

        #yellow, #stat-yellow{
            background: rgba(200,200,0,0.7);
        }

        #list{
            border-collapse: collapse;
            box-shadow: 10px 10px 5px #888888;
            overflow: hidden;
        }
        #list-parent{
            box-shadow: 5px 5px 5px #888888;
        }
        #list td{
            border: 1px solid lightgray;
            padding: 13px;
            text-align: left;
        }
          #district{
              box-shadow: 5px 5px 5px #888888;
          }
          .circle{
              border-radius: 50%;
              float: right;
              width: 15px;
              height: 15px;
          }
          .offline{
              background:rgba(255,0,0,0.7);
          }
          .online{
              background: rgba(0,200,0,0.7);
          }
				#births, #deaths{
					font-size: 1.7em;
					text-align: center;
					vertical-align: middle;
				}
				#births-txt, #deaths-txt{
					text-align: center;
					border-bottom: 1px dotted gray;
				}
				#deaths-txt{
          box-shadow: 4px 4px 4px rgba(255,0,0,0.7);
				}
				#births-txt{
          box-shadow:	4px 4px 4px rgba(0,255,0,0.7);
				}
				.card{
					text-align: center;
					border-bottom: 1px dotted lightgray;
				}
   </style>
  <script>

      if(scrollInterval){
          window.clearInterval(scrollInterval);
      }

      if(toggleInterval){
          window.clearInterval(toggleInterval);
      }
  </script>
<div id="c_district"
     style="width: 100%; height: 100%; text-align: center; float: right; border: 1px solid #000;">
    <div id="title" style="background: #2e6da4; box-shadow: 5px 5px 5px #888888; color: white; width: 99%;margin: auto; height: 5%;font-size: 1.5em; padding-top: 8px;border-bottom: 1px dotted lightgray">
        News Reading
    </div>
    <div id="leg" style="position: absolute; right: 28%; border: 1px solid #ccc; padding: 5px; font-size: 22px;">
        <table id="legend">
            <tr>
                <td id="green">&nbsp;</td>
                <td id="green-txt">Read in 48 hrs</td>
            </tr>

            <tr>
                <td id="yellow">&nbsp;</td>
                <td id="yellow-txt">Not read in 48 hrs</td>
            </tr>

            <tr>
                <td id="red" style=''>&nbsp;</td>
                <td id="red-txt">Not read in 3 days</td>
            </tr>
        </table>
    </div>


        <div id="list-parent" style="width: 24%;position: absolute; right: 2%;  height: 68%; overflow: hidden; margin-top: 6%;float: right;">
            <table id="list" style="width: 100%; font-size: 1.4em;">
								<tr>
									<td id="births" style="height: 250px;width: 100%;">
										<div class="card" style="width: 100%">New Births</div>
										<div id="births-txt" style="width: 100%; padding: 20px;font-size: 1.8em;">&nbsp;</div>
									</td>
								</tr>
								<tr>
									<td id="deaths" style="height: 220px;width: 100%;">
										<div class="card" style="width: 100%">New Deaths</div>
										<div id="deaths-txt" style="width: 100%;padding: 20px;font-size: 1.8em;">&nbsp;</div>
									</td>
								</tr>
            </table>
        </div>

        <object id="district" type="image/svg+xml" data="images/mw/ll_north.svg"
                  style="height: 87%; width: 73%;float: left; border: 1.5px solid #ccc;margin: 8px;margin-top: 1.5%;">

        </object>

        <div id="district_label"
           style="position: absolute; top: 5px;  color: white; left: 20px; border: 1px solid #ccc; padding: 5px; font-size: 22px;">
            TA Mtema
        </div>

          <div id="village_label"
               style="position: absolute; bottom: 60px; text-align: left; left: 15px; border: 1px solid ghostwhite; padding: 5px; font-size: 22px;width:40%;">
            &nbsp;
          </div>

    </div>

<script>

    String.prototype.capitalize = function() {
        return this.charAt(0).toUpperCase() + this.slice(1);
    }

    deathsToggle = [];
    birthsToggle = [];

    connections = {};
    durations = {};
    var refPoints = [-9.6, -17.4, 33.05, 35.98];
    var offsets = [10, 295, 10, 710];
    var radius = {};
    var green = 0;
    var yellow = 0;
    var red = 0;

    for(var key in values['legend']){
        __$(key + "-txt").innerHTML = values['legend'][key];
    }

    function latLon2Coord(lat, lon) {

        var x, y;

        x = ((offsets[1] - offsets[0]) * ((Math.abs(lon) - Math.abs(refPoints[2])) / (Math.abs(refPoints[3]) - Math.abs(refPoints[2])))) // + offsets[0];

        y = ((offsets[3] - offsets[2]) * ((Math.abs(lat) - Math.abs(refPoints[0])) / (Math.abs(refPoints[1]) - Math.abs(refPoints[0])))) // + offsets[2];

        return [x, y]

    }

    function insertSiteByOffset(x, y, color, id, district, village) {

        var doc = __$("district").contentDocument;

        var mw = doc.getElementById(district);

        var target = districtOffsets[district];

        var circle = document.createElementNS("http://www.w3.org/2000/svg", "circle");
        circle.setAttribute("cx", (x - target.x));
        circle.setAttribute("cy", (y - target.y));

        var r = 0;
        var p = 0;
        if(radius[village.replace(/\s+/g, '_').toLowerCase()]) {
            r = radius[village.replace(/\s+/g, '_').toLowerCase()][0];
            p = radius[village.replace(/\s+/g, '_').toLowerCase()][1]
        }

        circle.setAttribute("r", r);
        circle.setAttribute("id", id);
        circle.setAttribute("fill", color);
        circle.setAttribute("stroke-width", 0.025);
        circle.setAttribute("stroke", "rgba(0,0,0,0.7)");
        circle.setAttribute("data-tooltip", village);
        var v = village.split(/\_+/);
        v = v[v.length -1 ];
        circle.setAttribute("title", v.capitalize());

        circle.onmouseover = function(){
            __$("village_label").innerHTML = v.capitalize() + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; " + p + " resident(s)";
        };

        circle.onmouseout = function(){
            __$("village_label").innerHTML = "&nbsp;";
        };
        mw.appendChild(circle);
    }


    function insertSiteMarkerByOffset(x, y, color, id, district, village, showBirths, showDeaths) {
        var visible_births = "hidden";
        if(showBirths){
            visible_births = "visible";
        }

        var doc = __$("district").contentDocument;
        var mw = doc.getElementById(district);
        var target = districtOffsets[district];

        var svgimg = document.createElementNS('http://www.w3.org/2000/svg','image');
        svgimg.setAttribute('height','5%');
        svgimg.setAttribute('width','5%');
        svgimg.setAttribute('id', ("pin-birth" + id));
        if(showBirths) {
            birthsToggle.push(svgimg);
        }
        svgimg.setAttribute("visibility", visible_births);
        svgimg.setAttributeNS('http://www.w3.org/1999/xlink','href','pin-blue.svg');
        svgimg.setAttribute('x',(x - 1.0165*target.x));
        svgimg.setAttribute('y',(y - 1.0044*target.y));
        mw.appendChild(svgimg);

        var svgimg = document.createElementNS('http://www.w3.org/2000/svg','image');
        svgimg.setAttribute('height','5%');
        svgimg.setAttribute('width','5%');
        svgimg.setAttribute('id', ("pin-death" + id));
        if(showDeaths) {
            deathsToggle.push(svgimg)
        }
        svgimg.setAttribute("visibility", "hidden");
        svgimg.setAttributeNS('http://www.w3.org/1999/xlink','href','pin-black.svg');
        svgimg.setAttribute('x',(x - 1.0165*target.x));
        svgimg.setAttribute('y',(y - 1.0044*target.y));
        mw.appendChild(svgimg);
    }


    function loadDistrictSitesMarkerByOffsets(district, data, births, deaths) {
        var target = sites_by_zones[district];

        for (var i = 0; i < target.length; i++) {

            var result = latLon2Coord(target[i]["latitude"], target[i]["longitude"])

            var colors = ["rgba(255,0,0,0.7)", "rgba(0,200,0,0.7)", "rgba(0,0,200,0.7)"];

            var vg = district.toLowerCase().replace(/\s/g, '_') + "__mtema__" +target[i]['village'].replace(/\s/g, '_').toLowerCase();

            if(data[vg]) {
                var pos = 1;
            }else{
                var pos = 0;
            }

            insertSiteMarkerByOffset(result[0], result[1], colors[pos], district + '_' + target[i]["facility_id"], district, vg, births[vg], deaths[vg]);

        }

    }

    function loadSiteConnections(district){

        jQuery.ajax({url: "/home/connection_status?prefix=news_",
            success: function(r){
                connections = JSON.parse(r)[0];
                durations = JSON.parse(r)[1];
                jQuery.ajax({url: "/home/connection_lastseennews_status",
                    success: function(r){
                        r = JSON.parse(r);
                        lastseen = r[0];
                        births = r[1];
                        new_births = r[2];
                        deaths = r[3];
                        new_deaths = r[4];
                        radius = r[5];

                        loadDistrictSitesByOffsets("lilongwe", lastseen);
                        loadDistrictSitesMarkerByOffsets("lilongwe", lastseen, births, deaths);

                        __$("red").innerHTML = red;
                        __$("yellow").innerHTML = yellow;
                        __$("green").innerHTML = green;

                        jQuery.ajax({url: "/home/births_deaths_stats",
                        success: function(r){
                            stats = JSON.parse(r);

                            if(Object.keys(stats).length > 0){
                                __$("births-txt").innerHTML = stats["births"];
                                __$("deaths-txt").innerHTML = stats["deaths"];
                            }
                    }
                });
                    }
                });

              
            }
        });
    }

    function loadDistrictSitesByOffsets(district, data) {

        var target = sites_by_zones[district];

        for (var i = 0; i < target.length; i++) {

            var result = latLon2Coord(target[i]["latitude"], target[i]["longitude"])

            var colors = ["rgba(255,0,0,0.7)", "rgba(200,200,0,0.7)", "rgba(0,200,0,0.7)"];

            var vg = district.toLowerCase().replace(/\s/g, '_') + "__mtema__" +target[i]['village'].replace(/\s/g, '_').toLowerCase();

            if (!radius[vg]){
                continue;
            }

            var pos = parseInt(data[vg]);
            if (!colors[pos]){pos = 0};

            if(pos == 0){
                red += 1;
            }else if (pos == 1){
                yellow += 1;
            }else{
                green += 1;
            }

            insertSiteByOffset(result[0], result[1], colors[pos], district + '_' + target[i]["facility_id"], district, vg);						
        }

    }

    setTimeout(function () {

       loadSiteConnections("lilongwe");

    }, 500);

    function __$(id){
        return document.getElementById(id);
    }

    setTimeout(function(){
        toggleInterval = window.setInterval(function () {

            for(var i = 0 ; i < birthsToggle.length; i ++){
                if (birthsToggle[i].getAttribute("visibility") == "visible"){
                    birthsToggle[i].setAttribute("visibility", "hidden")
                }else{
                    birthsToggle[i].setAttribute("visibility", "visible")
                }
            }

            for(var i = 0 ; i < deathsToggle.length; i ++){
                if (deathsToggle[i].getAttribute("visibility") == "visible"){
                    deathsToggle[i].setAttribute("visibility", "hidden")
                }else{
                    deathsToggle[i].setAttribute("visibility", "visible")
                }
            }

        }, 3000);
    }, 2000);


</script>
